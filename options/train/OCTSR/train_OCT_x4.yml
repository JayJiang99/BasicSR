#### general settings
name: OCTData1
model_type: OCTDegSRModel
scale: 4
num_gpu: auto  # auto: can infer from your visible devices automatically. official: 4 GPUs
manual_seed: 0


#### datasets
datasets:
  train:
    name: OCTX4
    type: UnpairedOCTDataset
    io_backend:
      type: lmdb
    color: Gray
    ratios: [200, 200]

    dataroot_gt: D:/zhiyi/OCT_SR/OCT_data/Unpaired_dataset/resol_3d8_10.lmdb
    dataroot_lq: D:/zhiyi/OCT_SR/OCT_data/Unpaired_dataset/resol_16_40.lmdb

    
    gt_size: 128
    # lq_size: 32
    use_hflip: True
    use_rot: False

    # data loader
    num_worker_per_gpu: 5
    batch_size_per_gpu: 12
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  # val:
  #   name: OCT16_40_val
  #   type: SingleImageDataset
  #   io_backend:
  #     type: lmdb
  #   color: Gray
  #   dataroot_lq: D:/zhiyi/OCT_SR/OCT_data/Unpaired_dataset/resol_16_40_crop_val.lmdb

#### network structures
networks:
  netDeg:
    type: OCTDegModel
    scale: 4
    num_in_ch: 1
    kernel_opt:
      spatial: true
      nc: 1
      nf: 64
      nb: 8
      head_k: 1
      body_k: 1
      ksize: 11
      zero_init: true
    noise_opt: 
      spatial: true
      nc: 1
      nf: 32
      nb: 8
      head_k: 3
      body_k: 3
      dim: 1
      zero_init: true


  netSR:
    type: EDSR
    num_in_ch: 1
    num_out_ch: 1
    num_feat: 256
    num_block: 32
    upscale: 4
    res_scale: 1
    img_range: 255.
    # rgb_mean: [0.4488, 0.4371, 0.4040]
  
  netD1:
    type: PatchGANDiscriminator
    num_in_ch: 1
    num_feat: 64
    num_b: 3
    stride: 1


  netD2:
    type: PatchGANDiscriminator
    num_in_ch: 1
    num_feat: 64
    num_b: 3
    stride: 1

# # path
# path:
#   # use the pre-trained Real-ESRNet model
#   pretrain_network_g: experiments/pretrained_models/RealESRNet_x2plus.pth
#   param_key_g: params_ema
#   strict_load_g: true
#   resume_state: ~
      
#### training settings: learning rate scheme, loss
train:
  resume_state: ~
  D_ratio: 1
  max_grad_norm: 50
  buffer_size: 0

  optim_deg: true
  optim_sr: true
  
  losses:
    sr_pix_sr: 
      type: L1Loss
      weight: 1.0
    
    noise_mean:
      type: MSELoss
      weight: 1.0
    
    lr_adv:
      type: GANLoss
      gan_type: lsgan
      real_label_val: 1.0
      fake_label_val: 0.0
      weight: !!float 0.05

    sr_adv:
      type: GANLoss
      gan_type: lsgan
      real_label_val: 1.0
      fake_label_val: 0.0
      weight: !!float 0.05
    
    sr_percep:
      type: PerceptualLoss
      layer_weights:
        'conv5_4': 1  # before relu
      vgg_type: vgg19
      use_input_norm: true
      range_norm: false
      perceptual_weight: 1.0
      style_weight: 0
      criterion: l1
      weight: !!float 0.05

  optimizers:
    default:
      type: Adam
      lr: !!float 2e-4
    netDeg: ~
    netSR: ~
    netD2: ~
    netD1: ~

  niter: 200000
  warmup_iter: -1  # no warm up

  schedulers:
    default:
      type: MultiStepRestartLR
      milestones: [50000, 100000, 150000]
      gamma: 0.5

  manual_seed: 0
  val_freq: !!float 5e3

#### logger
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
